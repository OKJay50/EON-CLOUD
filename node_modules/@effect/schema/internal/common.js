"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ownKeys = exports.memoize = exports.makeSchema = exports.getKeysForIndexSignature = exports.PrettyHookId = exports.ArbitraryHookId = void 0;
/**
 * @since 1.0.0
 */
// ---------------------------------------------
// hooks
// ---------------------------------------------
/** @internal */
const ArbitraryHookId = "@effect/schema/ArbitraryHookId";
/** @internal */
exports.ArbitraryHookId = ArbitraryHookId;
const PrettyHookId = "@effect/schema/PrettyHookId";
// ---------------------------------------------
// Schema APIs
// ---------------------------------------------
/** @internal */
exports.PrettyHookId = PrettyHookId;
const makeSchema = ast => ({
  ast
});
/** @internal */
exports.makeSchema = makeSchema;
const getKeysForIndexSignature = (input, parameter) => {
  switch (parameter._tag) {
    case "StringKeyword":
    case "TemplateLiteral":
      return Object.keys(input);
    case "SymbolKeyword":
      return Object.getOwnPropertySymbols(input);
    case "Refinement":
    case "Transform":
      return getKeysForIndexSignature(input, parameter.from);
  }
  return [];
};
// ---------------------------------------------
// general helpers
// ---------------------------------------------
/** @internal */
exports.getKeysForIndexSignature = getKeysForIndexSignature;
const ownKeys = o => Object.keys(o).concat(Object.getOwnPropertySymbols(o));
/** @internal */
exports.ownKeys = ownKeys;
const memoize = f => {
  const cache = new Map();
  return a => {
    if (!cache.has(a)) {
      const b = f(a);
      cache.set(a, b);
      return b;
    }
    return cache.get(a);
  };
};
exports.memoize = memoize;
//# sourceMappingURL=common.js.map