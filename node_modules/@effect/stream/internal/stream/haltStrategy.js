"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.match = exports.isRight = exports.isLeft = exports.isEither = exports.isBoth = exports.Right = exports.Left = exports.Either = exports.Both = void 0;
var _Function = /*#__PURE__*/require("@effect/data/Function");
var OpCodes = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("@effect/stream/internal/opCodes/haltStrategy"));
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
/** @internal */
const Left = {
  _tag: OpCodes.OP_LEFT
};
/** @internal */
exports.Left = Left;
const Right = {
  _tag: OpCodes.OP_RIGHT
};
/** @internal */
exports.Right = Right;
const Both = {
  _tag: OpCodes.OP_BOTH
};
/** @internal */
exports.Both = Both;
const Either = {
  _tag: OpCodes.OP_EITHER
};
/** @internal */
exports.Either = Either;
const isLeft = self => self._tag === OpCodes.OP_LEFT;
/** @internal */
exports.isLeft = isLeft;
const isRight = self => self._tag === OpCodes.OP_RIGHT;
/** @internal */
exports.isRight = isRight;
const isBoth = self => self._tag === OpCodes.OP_BOTH;
/** @internal */
exports.isBoth = isBoth;
const isEither = self => self._tag === OpCodes.OP_EITHER;
/** @internal */
exports.isEither = isEither;
const match = /*#__PURE__*/(0, _Function.dual)(5, (self, onLeft, onRight, onBoth, onEither) => {
  switch (self._tag) {
    case OpCodes.OP_LEFT:
      {
        return onLeft();
      }
    case OpCodes.OP_RIGHT:
      {
        return onRight();
      }
    case OpCodes.OP_BOTH:
      {
        return onBoth();
      }
    case OpCodes.OP_EITHER:
      {
        return onEither();
      }
  }
});
exports.match = match;
//# sourceMappingURL=haltStrategy.js.map