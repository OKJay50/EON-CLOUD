var _a, _b;
import * as Exit from "@effect/io/Exit";
import * as OpCodes from "@effect/stream/internal/opCodes/continuation";
/** @internal */
export const ContinuationTypeId = /*#__PURE__*/Symbol.for("@effect/stream/Channel/Continuation");
/** @internal */
const continuationVariance = {
  _Env: _ => _,
  _InErr: _ => _,
  _InElem: _ => _,
  _InDone: _ => _,
  _OutErr: _ => _,
  _OutDone: _ => _,
  _OutErr2: _ => _,
  _OutElem: _ => _,
  _OutDone2: _ => _
};
/** @internal */
export class ContinuationKImpl {
  constructor(onSuccess, onHalt) {
    this.onSuccess = onSuccess;
    this.onHalt = onHalt;
    this._tag = OpCodes.OP_CONTINUATION_K;
    this[_a] = continuationVariance;
  }
  onExit(exit) {
    return Exit.isFailure(exit) ? this.onHalt(exit.cause) : this.onSuccess(exit.value);
  }
}
_a = ContinuationTypeId;
/** @internal */
export class ContinuationFinalizerImpl {
  constructor(finalizer) {
    this.finalizer = finalizer;
    this._tag = OpCodes.OP_CONTINUATION_FINALIZER;
    this[_b] = continuationVariance;
  }
}
_b = ContinuationTypeId;
//# sourceMappingURL=continuation.mjs.map