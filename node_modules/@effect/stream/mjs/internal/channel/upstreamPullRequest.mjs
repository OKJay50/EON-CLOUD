import { dual } from "@effect/data/Function";
import * as OpCodes from "@effect/stream/internal/opCodes/upstreamPullRequest";
/** @internal */
const UpstreamPullRequestSymbolKey = "@effect/stream/Channel/UpstreamPullRequest";
/** @internal */
export const UpstreamPullRequestTypeId = /*#__PURE__*/Symbol.for(UpstreamPullRequestSymbolKey);
/** @internal */
const upstreamPullRequestVariance = {
  _A: _ => _
};
/** @internal */
const proto = {
  [UpstreamPullRequestTypeId]: upstreamPullRequestVariance
};
/** @internal */
export const Pulled = value => {
  const op = Object.create(proto);
  op._tag = OpCodes.OP_PULLED;
  op.value = value;
  return op;
};
/** @internal */
export const NoUpstream = activeDownstreamCount => {
  const op = Object.create(proto);
  op._tag = OpCodes.OP_NO_UPSTREAM;
  op.activeDownstreamCount = activeDownstreamCount;
  return op;
};
/** @internal */
export const isUpstreamPullRequest = u => typeof u === "object" && u != null && UpstreamPullRequestTypeId in u;
/** @internal */
export const isPulled = self => self._tag === OpCodes.OP_PULLED;
/** @internal */
export const isNoUpstream = self => self._tag === OpCodes.OP_NO_UPSTREAM;
/** @internal */
export const match = /*#__PURE__*/dual(3, (self, onPulled, onNoUpstream) => {
  switch (self._tag) {
    case OpCodes.OP_PULLED:
      {
        return onPulled(self.value);
      }
    case OpCodes.OP_NO_UPSTREAM:
      {
        return onNoUpstream(self.activeDownstreamCount);
      }
  }
});
//# sourceMappingURL=upstreamPullRequest.mjs.map