import * as Chunk from "@effect/data/Chunk";
import * as Option from "@effect/data/Option";
import * as Cause from "@effect/io/Cause";
import * as Effect from "@effect/io/Effect";
import * as Exit from "@effect/io/Exit";
/** @internal */
export const make = emit => {
  const ops = {
    chunk(as) {
      return this(Effect.succeed(as));
    },
    die(defect) {
      return this(Effect.die(defect));
    },
    dieMessage(message) {
      return this(Effect.dieMessage(message));
    },
    done(exit) {
      return this(Effect.done(Exit.mapBoth(Option.some, Chunk.of)(exit)));
    },
    end() {
      return this(Effect.fail(Option.none()));
    },
    fail(e) {
      return this(Effect.fail(Option.some(e)));
    },
    fromEffect(effect) {
      return this(Effect.mapBoth(Option.some, Chunk.of)(effect));
    },
    fromEffectChunk(effect) {
      return this(Effect.mapError(Option.some)(effect));
    },
    halt(cause) {
      return this(Effect.failCause(Cause.map(Option.some)(cause)));
    },
    single(value) {
      return this(Effect.succeed(Chunk.of(value)));
    }
  };
  return Object.assign(emit, ops);
};
//# sourceMappingURL=emit.mjs.map