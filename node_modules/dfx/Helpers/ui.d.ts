import { ActionRow, Button, Component, SelectMenu, SelectOption, TextInput, TextInputStyle } from "../types.js";
export type UIComponent = Exclude<Component, ActionRow>;
/**
 * Helper to create an Action Row grid.
 */
export declare const grid: (items: UIComponent[][]) => ActionRow[];
/**
 * Helper to create a single column of components
 */
export declare const singleColumn: (items: UIComponent[]) => ActionRow[];
/**
 * Helper to create a button component.
 */
export declare const button: (button: Partial<Button>) => Button;
type BasicSelect = Omit<SelectMenu, "type" | "channel_types" | "options">;
type StringSelect = BasicSelect & {
    options: SelectOption[];
};
type ChannelSelect = Omit<SelectMenu, "type" | "options">;
/**
 * Helper to create a select component.
 */
export declare const select: (select: StringSelect) => SelectMenu;
/**
 * Helper to create a select component.
 */
export declare const userSelect: (select: BasicSelect) => SelectMenu;
/**
 * Helper to create a select component.
 */
export declare const roleSelect: (select: BasicSelect) => SelectMenu;
/**
 * Helper to create a select component.
 */
export declare const mentionableSelect: (select: BasicSelect) => SelectMenu;
/**
 * Helper to create a select component.
 */
export declare const channelSelect: (select: ChannelSelect) => SelectMenu;
type TextInputOpts = Omit<TextInput, "type" | "style"> & {
    style?: TextInputStyle;
};
/**
 * Helper to create a text input
 */
export declare const textInput: (input: TextInputOpts) => TextInput;
export {};
