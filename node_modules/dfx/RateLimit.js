import * as tsplus_module_1 from "dfx/_common";
import * as tsplus_module_2 from "@effect/io/Layer";
import * as tsplus_module_3 from "@effect/io/Effect";
import * as tsplus_module_4 from "dfx";
import { delayFrom } from "./RateLimit/utils.js";
import * as Memory from "./RateLimit/memory.js";
export const RateLimitStore = tsplus_module_1.Tag();
export const LiveMemoryRateLimitStore = tsplus_module_2.sync(RateLimitStore, Memory.make);
const makeLimiter = tsplus_module_3.flatMap(RateLimitStore, store => tsplus_module_3.map(tsplus_module_4.Log.Log, log => {
    const maybeWait = (key, window, limit, multiplier = 1.05) => {
        const windowMs = window.millis * multiplier;
        return tsplus_module_3.asUnit(tsplus_module_3.tap(tsplus_module_3.tap(tsplus_module_3.map(store
            .incrementCounter(key, windowMs, limit), ([count, ttl]) => delayFrom(windowMs, limit, count, ttl)), d => log.debug("RateLimitStore maybeWait", {
            key,
            window: window.millis,
            windowMs,
            limit,
            delay: d.millis,
        })), _ => (_.millis === 0 ? tsplus_module_3.unit() : tsplus_module_3.sleep(_))));
    };
    return { maybeWait };
}));
export const RateLimiter = tsplus_module_1.Tag();
export const LiveRateLimiter = tsplus_module_2.effect(RateLimiter, makeLimiter);
//# sourceMappingURL=RateLimit.js.map