import * as tsplus_module_1 from "@effect/io/Effect";
import * as tsplus_module_2 from "@effect/data/Option";
import { createDriver, createParentDriver } from "./driver.js";
export const createWithParent = () => tsplus_module_1.sync(() => {
    const map = new Map();
    return createParentDriver({
        size: tsplus_module_1.sync(() => {
            let count = 0;
            for (const a of map.values()) {
                count += a.size;
            }
            return count;
        }),
        sizeForParent: parentId => tsplus_module_1.sync(() => map.get(parentId)?.size ?? 0),
        get: (parentId, resourceId) => tsplus_module_1.sync(() => tsplus_module_2.fromNullable(map.get(parentId)?.get(resourceId))),
        getForParent: parentId => tsplus_module_1.sync(() => tsplus_module_2.fromNullable(map.get(parentId))),
        set: (parentId, resourceId, resource) => tsplus_module_1.sync(() => {
            if (!map.has(parentId)) {
                map.set(parentId, new Map());
            }
            map.get(parentId).set(resourceId, resource);
        }),
        delete: (parentId, resourceId) => tsplus_module_1.sync(() => {
            map.get(parentId)?.delete(resourceId);
        }),
        parentDelete: parentId => tsplus_module_1.sync(() => {
            map.delete(parentId);
        }),
        refreshTTL: () => tsplus_module_1.unit(),
        run: tsplus_module_1.unit(),
    });
});
export const create = () => tsplus_module_1.sync(() => {
    const map = new Map();
    return createDriver({
        size: tsplus_module_1.sync(() => map.size),
        get: resourceId => tsplus_module_1.sync(() => tsplus_module_2.fromNullable(map.get(resourceId))),
        set: (resourceId, resource) => tsplus_module_1.sync(() => {
            map.set(resourceId, resource);
        }),
        delete: resourceId => tsplus_module_1.sync(() => {
            map.delete(resourceId);
        }),
        refreshTTL: () => tsplus_module_1.unit(),
        run: tsplus_module_1.unit(),
    });
});
//# sourceMappingURL=memory.js.map