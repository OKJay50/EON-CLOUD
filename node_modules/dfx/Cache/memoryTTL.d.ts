import { Duration, Maybe, Effect } from "dfx/_common";
export interface MemoryTTLOpts {
    /** The approx. number of milliseconds to keep items */
    ttl: Duration;
    /**
     * How often items should be cleared.
     */
    resolution?: Duration;
    /**
     * What sweep strategy to use.
     *
     * "activity" means the TTL is reset for every `set` OR `get` operation
     * "usage" means the TTL is only reset for the `get` operation
     *
     * Defaults to "usage"
     */
    strategy?: "activity" | "usage" | "expiry";
}
export declare const create: <T>(opts: MemoryTTLOpts) => import("@effect-http/client/_common").Effect<never, never, import("./driver.js").CacheDriver<never, T>>;
export declare const createWithParent: <T>(opts: MemoryTTLOpts) => import("@effect-http/client/_common").Effect<never, never, import("./driver.js").ParentCacheDriver<never, T>>;
