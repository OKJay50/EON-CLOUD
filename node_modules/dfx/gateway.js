import * as tsplus_module_1 from "@effect/io/Layer";
import * as tsplus_module_2 from "@effect/io/Config";
import { LiveFetchRequestExecutor } from "@effect-http/client";
import { DiscordConfig, LiveDiscordREST, Log } from "dfx";
import { LiveDiscordGateway } from "./DiscordGateway.js";
import { LiveJsonDiscordWSCodec } from "./DiscordGateway/DiscordWS.js";
import { LiveMemoryShardStore } from "./DiscordGateway/ShardStore.js";
import { LiveMemoryRateLimitStore, LiveRateLimiter } from "./RateLimit.js";
export * as CachePrelude from "./Cache/prelude.js";
export * as Gateway from "./DiscordGateway.js";
export * as DiscordWS from "./DiscordGateway/DiscordWS.js";
export * as Shard from "./DiscordGateway/Shard.js";
export * as ShardStore from "./DiscordGateway/ShardStore.js";
export * as WS from "./DiscordGateway/WS.js";
export { run as runIx } from "./Interactions/gateway.js";
export const MemoryRateLimit = tsplus_module_1.provide(LiveRateLimiter)(LiveMemoryRateLimitStore);
export const MemoryBot = tsplus_module_1.provide((tsplus_module_1.merge(MemoryRateLimit)((tsplus_module_1.provideMerge(LiveDiscordGateway)(LiveDiscordREST)))))((tsplus_module_1.merge(LiveJsonDiscordWSCodec)(tsplus_module_1.merge(LiveMemoryRateLimitStore)(LiveMemoryShardStore))));
export const makeLiveWithoutFetch = (config, debug = false) => {
    const LiveLog = debug ? Log.LiveLogDebug : Log.LiveLog;
    const LiveConfig = DiscordConfig.makeFromConfig(tsplus_module_2.unwrap(config));
    const LiveEnv = tsplus_module_1.provideMerge(MemoryBot)(tsplus_module_1.merge(LiveConfig)(LiveLog));
    return LiveEnv;
};
export const makeLive = (config, debug = false) => {
    return tsplus_module_1.provide(makeLiveWithoutFetch(config, debug))(LiveFetchRequestExecutor);
};
//# sourceMappingURL=gateway.js.map