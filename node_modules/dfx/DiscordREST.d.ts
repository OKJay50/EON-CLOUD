import { BucketDetails } from "dfx";
import { Effect, Discord } from "dfx/_common";
import * as Http from "@effect-http/client";
import { ResponseWithData, RestResponse } from "./DiscordREST/types.js";
export declare class DiscordRESTError {
    readonly error: Http.HttpClientError;
    readonly _tag = "DiscordRESTError";
    constructor(error: Http.HttpClientError);
}
declare const make: import("@effect-http/client/_common").Effect<import("./DiscordConfig.js").DiscordConfig | import("./Log.js").Log | import("./RateLimit.js").RateLimitStore | import("./RateLimit.js").RateLimiter | Http.HttpRequestExecutor, never, {
    addGuildMember: (guildId: string, userId: string, params?: Partial<import("./types.js").AddGuildMemberParams> | undefined, options?: Partial<Http.MakeOptions> | undefined) => RestResponse<import("./types.js").GuildMember>;
    addGuildMemberRole: (guildId: string, userId: string, roleId: string, options?: Partial<Http.MakeOptions> | undefined) => RestResponse<any>;
    addThreadMember: (channelId: string, userId: string, options?: Partial<Http.MakeOptions> | undefined) => RestResponse<any>;
    batchEditApplicationCommandPermissions: (applicationId: string, guildId: string, options?: Partial<Http.MakeOptions> | undefined) => RestResponse<any>;
    beginGuildPrune: (guildId: string, params?: Partial<import("./types.js").BeginGuildPruneParams> | undefined, options?: Partial<Http.MakeOptions> | undefined) => RestResponse<any>;
    bulkDeleteMessages: (channelId: string, params?: Partial<import("./types.js").BulkDeleteMessageParams> | undefined, options?: Partial<Http.MakeOptions> | undefined) => RestResponse<any>;
    bulkOverwriteGlobalApplicationCommands: (applicationId: string, options?: Partial<Http.MakeOptions> | undefined) => RestResponse<import("./types.js").ApplicationCommand[]>;
    bulkOverwriteGuildApplicationCommands: (applicationId: string, guildId: string, params?: Partial<import("./types.js").BulkOverwriteGuildApplicationCommandParams> | undefined, options?: Partial<Http.MakeOptions> | undefined) => RestResponse<import("./types.js").ApplicationCommand[]>;
    createAutoModerationRule: (guildId: string, params?: Partial<import("./types.js").CreateAutoModerationRuleParams> | undefined, options?: Partial<Http.MakeOptions> | undefined) => RestResponse<import("./types.js").AutoModerationRule>;
    createChannelInvite: (channelId: string, params?: Partial<import("./types.js").CreateChannelInviteParams> | undefined, options?: Partial<Http.MakeOptions> | undefined) => RestResponse<import("./types.js").Invite>;
    createDm: (params?: Partial<import("./types.js").CreateDmParams> | undefined, options?: Partial<Http.MakeOptions> | undefined) => RestResponse<import("./types.js").Channel>;
    createFollowupMessage: (applicationId: string, interactionToken: string, options?: Partial<Http.MakeOptions> | undefined) => RestResponse<any>;
    createGlobalApplicationCommand: (applicationId: string, params?: Partial<import("./types.js").CreateGlobalApplicationCommandParams> | undefined, options?: Partial<Http.MakeOptions> | undefined) => RestResponse<import("./types.js").ApplicationCommand>;
    createGroupDm: (params?: Partial<import("./types.js").CreateGroupDmParams> | undefined, options?: Partial<Http.MakeOptions> | undefined) => RestResponse<import("./types.js").Channel>;
    createGuild: (params?: Partial<import("./types.js").CreateGuildParams> | undefined, options?: Partial<Http.MakeOptions> | undefined) => RestResponse<import("./types.js").Guild>;
    createGuildApplicationCommand: (applicationId: string, guildId: string, params?: Partial<import("./types.js").CreateGuildApplicationCommandParams> | undefined, options?: Partial<Http.MakeOptions> | undefined) => RestResponse<import("./types.js").ApplicationCommand>;
    createGuildBan: (guildId: string, userId: string, params?: Partial<import("./types.js").CreateGuildBanParams> | undefined, options?: Partial<Http.MakeOptions> | undefined) => RestResponse<any>;
    createGuildChannel: (guildId: string, params?: Partial<import("./types.js").CreateGuildChannelParams> | undefined, options?: Partial<Http.MakeOptions> | undefined) => RestResponse<import("./types.js").Channel>;
    createGuildEmoji: (guildId: string, params?: Partial<import("./types.js").CreateGuildEmojiParams> | undefined, options?: Partial<Http.MakeOptions> | undefined) => RestResponse<import("./types.js").Emoji>;
    createGuildFromGuildTemplate: (templateCode: string, params?: Partial<import("./types.js").CreateGuildFromGuildTemplateParams> | undefined, options?: Partial<Http.MakeOptions> | undefined) => RestResponse<import("./types.js").Guild>;
    createGuildRole: (guildId: string, params?: Partial<import("./types.js").CreateGuildRoleParams> | undefined, options?: Partial<Http.MakeOptions> | undefined) => RestResponse<import("./types.js").Role>;
    createGuildScheduledEvent: (guildId: string, params?: Partial<import("./types.js").CreateGuildScheduledEventParams> | undefined, options?: Partial<Http.MakeOptions> | undefined) => RestResponse<import("./types.js").GuildScheduledEvent>;
    createGuildSticker: (guildId: string, params?: Partial<import("./types.js").CreateGuildStickerParams> | undefined, options?: Partial<Http.MakeOptions> | undefined) => RestResponse<import("./types.js").Sticker>;
    createGuildTemplate: (guildId: string, params?: Partial<import("./types.js").CreateGuildTemplateParams> | undefined, options?: Partial<Http.MakeOptions> | undefined) => RestResponse<import("./types.js").GuildTemplate>;
    createInteractionResponse: (interactionId: string, interactionToken: string, params?: Partial<import("./types.js").InteractionResponse> | undefined, options?: Partial<Http.MakeOptions> | undefined) => RestResponse<import("./types.js").InteractionResponse>;
    createMessage: (channelId: string, params?: Partial<import("./types.js").CreateMessageParams> | undefined, options?: Partial<Http.MakeOptions> | undefined) => RestResponse<import("./types.js").Message>;
    createReaction: (channelId: string, messageId: string, emoji: string, options?: Partial<Http.MakeOptions> | undefined) => RestResponse<any>;
    createStageInstance: (params?: Partial<import("./types.js").CreateStageInstanceParams> | undefined, options?: Partial<Http.MakeOptions> | undefined) => RestResponse<import("./types.js").StageInstance>;
    createWebhook: (channelId: string, params?: Partial<import("./types.js").CreateWebhookParams> | undefined, options?: Partial<Http.MakeOptions> | undefined) => RestResponse<import("./types.js").Webhook>;
    crosspostMessage: (channelId: string, messageId: string, options?: Partial<Http.MakeOptions> | undefined) => RestResponse<import("./types.js").Message>;
    deleteAllReactions: (channelId: string, messageId: string, options?: Partial<Http.MakeOptions> | undefined) => RestResponse<any>;
    deleteAllReactionsForEmoji: (channelId: string, messageId: string, emoji: string, options?: Partial<Http.MakeOptions> | undefined) => RestResponse<any>;
    deleteAutoModerationRule: (guildId: string, autoModerationRuleId: string, options?: Partial<Http.MakeOptions> | undefined) => RestResponse<any>;
    deleteChannelPermission: (channelId: string, overwriteId: string, options?: Partial<Http.MakeOptions> | undefined) => RestResponse<any>;
    deletecloseChannel: (channelId: string, options?: Partial<Http.MakeOptions> | undefined) => RestResponse<import("./types.js").Channel>;
    deleteFollowupMessage: (applicationId: string, interactionToken: string, messageId: string, options?: Partial<Http.MakeOptions> | undefined) => RestResponse<any>;
    deleteGlobalApplicationCommand: (applicationId: string, commandId: string, options?: Partial<Http.MakeOptions> | undefined) => RestResponse<any>;
    deleteGuild: (guildId: string, options?: Partial<Http.MakeOptions> | undefined) => RestResponse<any>;
    deleteGuildApplicationCommand: (applicationId: string, guildId: string, commandId: string, options?: Partial<Http.MakeOptions> | undefined) => RestResponse<any>;
    deleteGuildEmoji: (guildId: string, emojiId: string, options?: Partial<Http.MakeOptions> | undefined) => RestResponse<any>;
    deleteGuildIntegration: (guildId: string, integrationId: string, options?: Partial<Http.MakeOptions> | undefined) => RestResponse<any>;
    deleteGuildRole: (guildId: string, roleId: string, options?: Partial<Http.MakeOptions> | undefined) => RestResponse<any>;
    deleteGuildScheduledEvent: (guildId: string, guildScheduledEventId: string, options?: Partial<Http.MakeOptions> | undefined) => RestResponse<any>;
    deleteGuildSticker: (guildId: string, stickerId: string, options?: Partial<Http.MakeOptions> | undefined) => RestResponse<any>;
    deleteGuildTemplate: (guildId: string, templateCode: string, options?: Partial<Http.MakeOptions> | undefined) => RestResponse<import("./types.js").GuildTemplate>;
    deleteInvite: (inviteCode: string, options?: Partial<Http.MakeOptions> | undefined) => RestResponse<import("./types.js").Invite>;
    deleteMessage: (channelId: string, messageId: string, options?: Partial<Http.MakeOptions> | undefined) => RestResponse<any>;
    deleteOriginalInteractionResponse: (applicationId: string, interactionToken: string, options?: Partial<Http.MakeOptions> | undefined) => RestResponse<any>;
    deleteOwnReaction: (channelId: string, messageId: string, emoji: string, options?: Partial<Http.MakeOptions> | undefined) => RestResponse<any>;
    deleteStageInstance: (channelId: string, options?: Partial<Http.MakeOptions> | undefined) => RestResponse<any>;
    deleteUserReaction: (channelId: string, messageId: string, emoji: string, userId: string, options?: Partial<Http.MakeOptions> | undefined) => RestResponse<any>;
    deleteWebhook: (webhookId: string, options?: Partial<Http.MakeOptions> | undefined) => RestResponse<any>;
    deleteWebhookMessage: (webhookId: string, webhookToken: string, messageId: string, params?: Partial<import("./types.js").DeleteWebhookMessageParams> | undefined, options?: Partial<Http.MakeOptions> | undefined) => RestResponse<any>;
    deleteWebhookWithToken: (webhookId: string, webhookToken: string, options?: Partial<Http.MakeOptions> | undefined) => RestResponse<any>;
    editApplicationCommandPermissions: (applicationId: string, guildId: string, commandId: string, params?: Partial<import("./types.js").EditApplicationCommandPermissionParams> | undefined, options?: Partial<Http.MakeOptions> | undefined) => RestResponse<import("./types.js").GuildApplicationCommandPermission>;
    editChannelPermissions: (channelId: string, overwriteId: string, params?: Partial<import("./types.js").EditChannelPermissionParams> | undefined, options?: Partial<Http.MakeOptions> | undefined) => RestResponse<any>;
    editFollowupMessage: (applicationId: string, interactionToken: string, messageId: string, options?: Partial<Http.MakeOptions> | undefined) => RestResponse<any>;
    editGlobalApplicationCommand: (applicationId: string, commandId: string, params?: Partial<import("./types.js").EditGlobalApplicationCommandParams> | undefined, options?: Partial<Http.MakeOptions> | undefined) => RestResponse<import("./types.js").ApplicationCommand>;
    editGuildApplicationCommand: (applicationId: string, guildId: string, commandId: string, params?: Partial<import("./types.js").EditGuildApplicationCommandParams> | undefined, options?: Partial<Http.MakeOptions> | undefined) => RestResponse<import("./types.js").ApplicationCommand>;
    editMessage: (channelId: string, messageId: string, params?: Partial<import("./types.js").EditMessageParams> | undefined, options?: Partial<Http.MakeOptions> | undefined) => RestResponse<import("./types.js").Message>;
    editOriginalInteractionResponse: (applicationId: string, interactionToken: string, options?: Partial<Http.MakeOptions> | undefined) => RestResponse<any>;
    editWebhookMessage: (webhookId: string, webhookToken: string, messageId: string, params?: Partial<import("./types.js").EditWebhookMessageParams> | undefined, options?: Partial<Http.MakeOptions> | undefined) => RestResponse<import("./types.js").Message>;
    executeGitHubCompatibleWebhook: (webhookId: string, webhookToken: string, options?: Partial<Http.MakeOptions> | undefined) => RestResponse<any>;
    executeSlackCompatibleWebhook: (webhookId: string, webhookToken: string, options?: Partial<Http.MakeOptions> | undefined) => RestResponse<any>;
    executeWebhook: (webhookId: string, webhookToken: string, params?: Partial<import("./types.js").ExecuteWebhookParams> | undefined, options?: Partial<Http.MakeOptions> | undefined) => RestResponse<any>;
    followAnnouncementChannel: (channelId: string, params?: Partial<import("./types.js").FollowAnnouncementChannelParams> | undefined, options?: Partial<Http.MakeOptions> | undefined) => RestResponse<import("./types.js").FollowedChannel>;
    getApplicationCommandPermissions: (applicationId: string, guildId: string, commandId: string, options?: Partial<Http.MakeOptions> | undefined) => RestResponse<import("./types.js").GuildApplicationCommandPermission>;
    getApplicationRoleConnectionMetadataRecords: (applicationId: string, options?: Partial<Http.MakeOptions> | undefined) => RestResponse<import("./types.js").ApplicationRoleConnectionMetadatum[]>;
    getAutoModerationRule: (guildId: string, autoModerationRuleId: string, options?: Partial<Http.MakeOptions> | undefined) => RestResponse<import("./types.js").AutoModerationRule>;
    getChannel: (channelId: string, options?: Partial<Http.MakeOptions> | undefined) => RestResponse<import("./types.js").Channel>;
    getChannelInvites: (channelId: string, options?: Partial<Http.MakeOptions> | undefined) => RestResponse<import("./types.js").Invite[]>;
    getChannelMessage: (channelId: string, messageId: string, options?: Partial<Http.MakeOptions> | undefined) => RestResponse<import("./types.js").Message>;
    getChannelMessages: (channelId: string, params?: Partial<import("./types.js").GetChannelMessageParams> | undefined, options?: Partial<Http.MakeOptions> | undefined) => RestResponse<import("./types.js").Message[]>;
    getChannelWebhooks: (channelId: string, options?: Partial<Http.MakeOptions> | undefined) => RestResponse<import("./types.js").Webhook[]>;
    getCurrentAuthorizationInformation: (options?: Partial<Http.MakeOptions> | undefined) => RestResponse<import("./types.js").GetCurrentAuthorizationInformationResponse>;
    getCurrentBotApplicationInformation: (options?: Partial<Http.MakeOptions> | undefined) => RestResponse<import("./types.js").Application>;
    getCurrentUser: (options?: Partial<Http.MakeOptions> | undefined) => RestResponse<import("./types.js").User>;
    getCurrentUserGuildMember: (guildId: string, options?: Partial<Http.MakeOptions> | undefined) => RestResponse<import("./types.js").GuildMember>;
    getCurrentUserGuilds: (params?: Partial<import("./types.js").GetCurrentUserGuildParams> | undefined, options?: Partial<Http.MakeOptions> | undefined) => RestResponse<import("./types.js").Guild[]>;
    getFollowupMessage: (applicationId: string, interactionToken: string, messageId: string, options?: Partial<Http.MakeOptions> | undefined) => RestResponse<any>;
    getGateway: (options?: Partial<Http.MakeOptions> | undefined) => RestResponse<any>;
    getGatewayBot: (options?: Partial<Http.MakeOptions> | undefined) => RestResponse<import("./types.js").GetGatewayBotResponse>;
    getGlobalApplicationCommand: (applicationId: string, commandId: string, options?: Partial<Http.MakeOptions> | undefined) => RestResponse<import("./types.js").ApplicationCommand>;
    getGlobalApplicationCommands: (applicationId: string, params?: Partial<import("./types.js").GetGlobalApplicationCommandParams> | undefined, options?: Partial<Http.MakeOptions> | undefined) => RestResponse<import("./types.js").ApplicationCommand[]>;
    getGuild: (guildId: string, params?: Partial<import("./types.js").GetGuildParams> | undefined, options?: Partial<Http.MakeOptions> | undefined) => RestResponse<import("./types.js").Guild>;
    getGuildApplicationCommand: (applicationId: string, guildId: string, commandId: string, options?: Partial<Http.MakeOptions> | undefined) => RestResponse<import("./types.js").ApplicationCommand>;
    getGuildApplicationCommandPermissions: (applicationId: string, guildId: string, options?: Partial<Http.MakeOptions> | undefined) => RestResponse<import("./types.js").GuildApplicationCommandPermission[]>;
    getGuildApplicationCommands: (applicationId: string, guildId: string, params?: Partial<import("./types.js").GetGuildApplicationCommandParams> | undefined, options?: Partial<Http.MakeOptions> | undefined) => RestResponse<import("./types.js").ApplicationCommand[]>;
    getGuildAuditLog: (guildId: string, params?: Partial<import("./types.js").GetGuildAuditLogParams> | undefined, options?: Partial<Http.MakeOptions> | undefined) => RestResponse<import("./types.js").AuditLog>;
    getGuildBan: (guildId: string, userId: string, options?: Partial<Http.MakeOptions> | undefined) => RestResponse<import("./types.js").Ban>;
    getGuildBans: (guildId: string, params?: Partial<import("./types.js").GetGuildBanParams> | undefined, options?: Partial<Http.MakeOptions> | undefined) => RestResponse<import("./types.js").Ban[]>;
    getGuildChannels: (guildId: string, options?: Partial<Http.MakeOptions> | undefined) => RestResponse<import("./types.js").Channel[]>;
    getGuildEmoji: (guildId: string, emojiId: string, options?: Partial<Http.MakeOptions> | undefined) => RestResponse<import("./types.js").Emoji>;
    getGuildIntegrations: (guildId: string, options?: Partial<Http.MakeOptions> | undefined) => RestResponse<import("./types.js").Integration[]>;
    getGuildInvites: (guildId: string, options?: Partial<Http.MakeOptions> | undefined) => RestResponse<import("./types.js").Invite[]>;
    getGuildMember: (guildId: string, userId: string, options?: Partial<Http.MakeOptions> | undefined) => RestResponse<import("./types.js").GuildMember>;
    getGuildOnboarding: (guildId: string, options?: Partial<Http.MakeOptions> | undefined) => RestResponse<import("./types.js").GuildOnboarding>;
    getGuildPreview: (guildId: string, options?: Partial<Http.MakeOptions> | undefined) => RestResponse<import("./types.js").GuildPreview>;
    getGuildPruneCount: (guildId: string, params?: Partial<import("./types.js").GetGuildPruneCountParams> | undefined, options?: Partial<Http.MakeOptions> | undefined) => RestResponse<any>;
    getGuildRoles: (guildId: string, options?: Partial<Http.MakeOptions> | undefined) => RestResponse<import("./types.js").Role[]>;
    getGuildScheduledEvent: (guildId: string, guildScheduledEventId: string, params?: Partial<import("./types.js").GetGuildScheduledEventParams> | undefined, options?: Partial<Http.MakeOptions> | undefined) => RestResponse<import("./types.js").GuildScheduledEvent>;
    getGuildScheduledEventUsers: (guildId: string, guildScheduledEventId: string, params?: Partial<import("./types.js").GetGuildScheduledEventUserParams> | undefined, options?: Partial<Http.MakeOptions> | undefined) => RestResponse<import("./types.js").GuildScheduledEventUser[]>;
    getGuildSticker: (guildId: string, stickerId: string, options?: Partial<Http.MakeOptions> | undefined) => RestResponse<import("./types.js").Sticker>;
    getGuildTemplate: (templateCode: string, options?: Partial<Http.MakeOptions> | undefined) => RestResponse<import("./types.js").GuildTemplate>;
    getGuildTemplates: (guildId: string, options?: Partial<Http.MakeOptions> | undefined) => RestResponse<import("./types.js").GuildTemplate[]>;
    getGuildVanityUrl: (guildId: string, options?: Partial<Http.MakeOptions> | undefined) => RestResponse<import("./types.js").Invite>;
    getGuildVoiceRegions: (guildId: string, options?: Partial<Http.MakeOptions> | undefined) => RestResponse<import("./types.js").VoiceRegion[]>;
    getGuildWebhooks: (guildId: string, options?: Partial<Http.MakeOptions> | undefined) => RestResponse<import("./types.js").Webhook[]>;
    getGuildWelcomeScreen: (guildId: string, options?: Partial<Http.MakeOptions> | undefined) => RestResponse<import("./types.js").WelcomeScreen>;
    getGuildWidget: (guildId: string, options?: Partial<Http.MakeOptions> | undefined) => RestResponse<import("./types.js").GuildWidget>;
    getGuildWidgetImage: (guildId: string, params?: Partial<import("./types.js").GetGuildWidgetImageParams> | undefined, options?: Partial<Http.MakeOptions> | undefined) => RestResponse<any>;
    getGuildWidgetSettings: (guildId: string, options?: Partial<Http.MakeOptions> | undefined) => RestResponse<import("./types.js").GuildWidgetSetting>;
    getInvite: (inviteCode: string, params?: Partial<import("./types.js").GetInviteParams> | undefined, options?: Partial<Http.MakeOptions> | undefined) => RestResponse<import("./types.js").Invite>;
    getOriginalInteractionResponse: (applicationId: string, interactionToken: string, options?: Partial<Http.MakeOptions> | undefined) => RestResponse<any>;
    getPinnedMessages: (channelId: string, options?: Partial<Http.MakeOptions> | undefined) => RestResponse<import("./types.js").Message[]>;
    getReactions: (channelId: string, messageId: string, emoji: string, params?: Partial<import("./types.js").GetReactionParams> | undefined, options?: Partial<Http.MakeOptions> | undefined) => RestResponse<import("./types.js").User[]>;
    getStageInstance: (channelId: string, options?: Partial<Http.MakeOptions> | undefined) => RestResponse<any>;
    getSticker: (stickerId: string, options?: Partial<Http.MakeOptions> | undefined) => RestResponse<import("./types.js").Sticker>;
    getThreadMember: (channelId: string, userId: string, params?: Partial<import("./types.js").GetThreadMemberParams> | undefined, options?: Partial<Http.MakeOptions> | undefined) => RestResponse<import("./types.js").ThreadMember>;
    getUser: (userId: string, options?: Partial<Http.MakeOptions> | undefined) => RestResponse<import("./types.js").User>;
    getUserApplicationRoleConnection: (applicationId: string, options?: Partial<Http.MakeOptions> | undefined) => RestResponse<import("./types.js").ApplicationRoleConnection>;
    getUserConnections: (options?: Partial<Http.MakeOptions> | undefined) => RestResponse<import("./types.js").Connection[]>;
    getWebhook: (webhookId: string, options?: Partial<Http.MakeOptions> | undefined) => RestResponse<import("./types.js").Webhook>;
    getWebhookMessage: (webhookId: string, webhookToken: string, messageId: string, params?: Partial<import("./types.js").GetWebhookMessageParams> | undefined, options?: Partial<Http.MakeOptions> | undefined) => RestResponse<import("./types.js").Message>;
    getWebhookWithToken: (webhookId: string, webhookToken: string, options?: Partial<Http.MakeOptions> | undefined) => RestResponse<any>;
    groupDmAddRecipient: (channelId: string, userId: string, params?: Partial<import("./types.js").GroupDmAddRecipientParams> | undefined, options?: Partial<Http.MakeOptions> | undefined) => RestResponse<any>;
    groupDmRemoveRecipient: (channelId: string, userId: string, options?: Partial<Http.MakeOptions> | undefined) => RestResponse<any>;
    joinThread: (channelId: string, options?: Partial<Http.MakeOptions> | undefined) => RestResponse<any>;
    leaveGuild: (guildId: string, options?: Partial<Http.MakeOptions> | undefined) => RestResponse<any>;
    leaveThread: (channelId: string, options?: Partial<Http.MakeOptions> | undefined) => RestResponse<any>;
    listActiveGuildThreads: (guildId: string, options?: Partial<Http.MakeOptions> | undefined) => RestResponse<import("./types.js").ListActiveGuildThreadResponse>;
    listAutoModerationRulesForGuild: (guildId: string, options?: Partial<Http.MakeOptions> | undefined) => RestResponse<import("./types.js").AutoModerationRule[]>;
    listGuildEmojis: (guildId: string, options?: Partial<Http.MakeOptions> | undefined) => RestResponse<import("./types.js").Emoji[]>;
    listGuildMembers: (guildId: string, params?: Partial<import("./types.js").ListGuildMemberParams> | undefined, options?: Partial<Http.MakeOptions> | undefined) => RestResponse<import("./types.js").GuildMember[]>;
    listGuildStickers: (guildId: string, options?: Partial<Http.MakeOptions> | undefined) => RestResponse<import("./types.js").Sticker[]>;
    listJoinedPrivateArchivedThreads: (channelId: string, params?: Partial<import("./types.js").ListJoinedPrivateArchivedThreadParams> | undefined, options?: Partial<Http.MakeOptions> | undefined) => RestResponse<import("./types.js").ListJoinedPrivateArchivedThreadResponse>;
    listNitroStickerPacks: (options?: Partial<Http.MakeOptions> | undefined) => RestResponse<any>;
    listPrivateArchivedThreads: (channelId: string, params?: Partial<import("./types.js").ListPrivateArchivedThreadParams> | undefined, options?: Partial<Http.MakeOptions> | undefined) => RestResponse<import("./types.js").ListPrivateArchivedThreadResponse>;
    listPublicArchivedThreads: (channelId: string, params?: Partial<import("./types.js").ListPublicArchivedThreadParams> | undefined, options?: Partial<Http.MakeOptions> | undefined) => RestResponse<import("./types.js").ListPublicArchivedThreadResponse>;
    listScheduledEventsForGuild: (guildId: string, params?: Partial<import("./types.js").ListScheduledEventsForGuildParams> | undefined, options?: Partial<Http.MakeOptions> | undefined) => RestResponse<import("./types.js").GuildScheduledEvent[]>;
    listThreadMembers: (channelId: string, params?: Partial<import("./types.js").ListThreadMemberParams> | undefined, options?: Partial<Http.MakeOptions> | undefined) => RestResponse<import("./types.js").ThreadMember[]>;
    listVoiceRegions: (options?: Partial<Http.MakeOptions> | undefined) => RestResponse<import("./types.js").VoiceRegion[]>;
    modifyAutoModerationRule: (guildId: string, autoModerationRuleId: string, params?: Partial<import("./types.js").ModifyAutoModerationRuleParams> | undefined, options?: Partial<Http.MakeOptions> | undefined) => RestResponse<import("./types.js").AutoModerationRule>;
    modifyChannel: (channelId: string, params?: Partial<import("./types.js").ModifyChannelParams> | undefined, options?: Partial<Http.MakeOptions> | undefined) => RestResponse<import("./types.js").Channel>;
    modifyCurrentMember: (guildId: string, params?: Partial<import("./types.js").ModifyCurrentMemberParams> | undefined, options?: Partial<Http.MakeOptions> | undefined) => RestResponse<any>;
    modifyCurrentUser: (params?: Partial<import("./types.js").ModifyCurrentUserParams> | undefined, options?: Partial<Http.MakeOptions> | undefined) => RestResponse<import("./types.js").User>;
    modifyCurrentUserNick: (guildId: string, params?: Partial<import("./types.js").ModifyCurrentUserNickParams> | undefined, options?: Partial<Http.MakeOptions> | undefined) => RestResponse<any>;
    modifyCurrentUserVoiceState: (guildId: string, params?: Partial<import("./types.js").ModifyCurrentUserVoiceStateParams> | undefined, options?: Partial<Http.MakeOptions> | undefined) => RestResponse<any>;
    modifyGuild: (guildId: string, params?: Partial<import("./types.js").ModifyGuildParams> | undefined, options?: Partial<Http.MakeOptions> | undefined) => RestResponse<import("./types.js").Guild>;
    modifyGuildChannelPositions: (guildId: string, params?: Partial<import("./types.js").ModifyGuildChannelPositionParams> | undefined, options?: Partial<Http.MakeOptions> | undefined) => RestResponse<any>;
    modifyGuildEmoji: (guildId: string, emojiId: string, params?: Partial<import("./types.js").ModifyGuildEmojiParams> | undefined, options?: Partial<Http.MakeOptions> | undefined) => RestResponse<import("./types.js").Emoji>;
    modifyGuildMember: (guildId: string, userId: string, params?: Partial<import("./types.js").ModifyGuildMemberParams> | undefined, options?: Partial<Http.MakeOptions> | undefined) => RestResponse<import("./types.js").GuildMember>;
    modifyGuildMfaLevel: (guildId: string, params?: Partial<import("./types.js").ModifyGuildMfaLevelParams> | undefined, options?: Partial<Http.MakeOptions> | undefined) => RestResponse<import("./types.js").MfaLevel>;
    modifyGuildRole: (guildId: string, roleId: string, params?: Partial<import("./types.js").ModifyGuildRoleParams> | undefined, options?: Partial<Http.MakeOptions> | undefined) => RestResponse<import("./types.js").Role>;
    modifyGuildRolePositions: (guildId: string, params?: Partial<import("./types.js").ModifyGuildRolePositionParams> | undefined, options?: Partial<Http.MakeOptions> | undefined) => RestResponse<import("./types.js").Role[]>;
    modifyGuildScheduledEvent: (guildId: string, guildScheduledEventId: string, params?: Partial<import("./types.js").ModifyGuildScheduledEventParams> | undefined, options?: Partial<Http.MakeOptions> | undefined) => RestResponse<import("./types.js").GuildScheduledEvent>;
    modifyGuildSticker: (guildId: string, stickerId: string, params?: Partial<import("./types.js").ModifyGuildStickerParams> | undefined, options?: Partial<Http.MakeOptions> | undefined) => RestResponse<import("./types.js").Sticker>;
    modifyGuildTemplate: (guildId: string, templateCode: string, params?: Partial<import("./types.js").ModifyGuildTemplateParams> | undefined, options?: Partial<Http.MakeOptions> | undefined) => RestResponse<import("./types.js").GuildTemplate>;
    modifyGuildWelcomeScreen: (guildId: string, params?: Partial<import("./types.js").ModifyGuildWelcomeScreenParams> | undefined, options?: Partial<Http.MakeOptions> | undefined) => RestResponse<import("./types.js").WelcomeScreen>;
    modifyGuildWidget: (guildId: string, options?: Partial<Http.MakeOptions> | undefined) => RestResponse<import("./types.js").GuildWidgetSetting>;
    modifyStageInstance: (channelId: string, params?: Partial<import("./types.js").ModifyStageInstanceParams> | undefined, options?: Partial<Http.MakeOptions> | undefined) => RestResponse<import("./types.js").StageInstance>;
    modifyUserVoiceState: (guildId: string, userId: string, params?: Partial<import("./types.js").ModifyUserVoiceStateParams> | undefined, options?: Partial<Http.MakeOptions> | undefined) => RestResponse<any>;
    modifyWebhook: (webhookId: string, params?: Partial<import("./types.js").ModifyWebhookParams> | undefined, options?: Partial<Http.MakeOptions> | undefined) => RestResponse<import("./types.js").Webhook>;
    modifyWebhookWithToken: (webhookId: string, webhookToken: string, options?: Partial<Http.MakeOptions> | undefined) => RestResponse<any>;
    pinMessage: (channelId: string, messageId: string, options?: Partial<Http.MakeOptions> | undefined) => RestResponse<any>;
    removeGuildBan: (guildId: string, userId: string, options?: Partial<Http.MakeOptions> | undefined) => RestResponse<any>;
    removeGuildMember: (guildId: string, userId: string, options?: Partial<Http.MakeOptions> | undefined) => RestResponse<any>;
    removeGuildMemberRole: (guildId: string, userId: string, roleId: string, options?: Partial<Http.MakeOptions> | undefined) => RestResponse<any>;
    removeThreadMember: (channelId: string, userId: string, options?: Partial<Http.MakeOptions> | undefined) => RestResponse<any>;
    searchGuildMembers: (guildId: string, params?: Partial<import("./types.js").SearchGuildMemberParams> | undefined, options?: Partial<Http.MakeOptions> | undefined) => RestResponse<import("./types.js").GuildMember[]>;
    startThreadFromMessage: (channelId: string, messageId: string, params?: Partial<import("./types.js").StartThreadFromMessageParams> | undefined, options?: Partial<Http.MakeOptions> | undefined) => RestResponse<import("./types.js").Channel>;
    startThreadInForumChannel: (channelId: string, params?: Partial<import("./types.js").StartThreadInForumChannelParams> | undefined, options?: Partial<Http.MakeOptions> | undefined) => RestResponse<import("./types.js").Channel>;
    startThreadWithoutMessage: (channelId: string, params?: Partial<import("./types.js").StartThreadWithoutMessageParams> | undefined, options?: Partial<Http.MakeOptions> | undefined) => RestResponse<import("./types.js").Channel>;
    syncGuildTemplate: (guildId: string, templateCode: string, options?: Partial<Http.MakeOptions> | undefined) => RestResponse<import("./types.js").GuildTemplate>;
    triggerTypingIndicator: (channelId: string, options?: Partial<Http.MakeOptions> | undefined) => RestResponse<any>;
    unpinMessage: (channelId: string, messageId: string, options?: Partial<Http.MakeOptions> | undefined) => RestResponse<any>;
    updateApplicationRoleConnectionMetadataRecords: (applicationId: string, options?: Partial<Http.MakeOptions> | undefined) => RestResponse<import("./types.js").ApplicationRoleConnectionMetadatum[]>;
    updateUserApplicationRoleConnection: (applicationId: string, params?: Partial<import("./types.js").UpdateUserApplicationRoleConnectionParams> | undefined, options?: Partial<Http.MakeOptions> | undefined) => RestResponse<import("./types.js").ApplicationRoleConnection>;
    executor: <A = unknown>(request: Http.Request) => import("@effect-http/client/_common").Effect<never, DiscordRESTError, ResponseWithData<A>>;
}>;
export interface DiscordREST extends Effect.Success<typeof make> {
}
export declare const DiscordREST: import("@effect/data/Context").Tag<DiscordREST, DiscordREST>;
export declare const LiveDiscordREST: import("@effect-http/client/_common").Layer<import("./DiscordConfig.js").DiscordConfig | import("./Log.js").Log | import("./RateLimit.js").RateLimitStore | Http.HttpRequestExecutor, never, DiscordREST>;
export {};
