import * as tsplus_module_1 from "@effect/data/Option";
export class RawBody {
    contentType;
    contentLength;
    value;
    _tag = "RawBody";
    constructor(contentType, contentLength, value) {
        this.contentType = contentType;
        this.contentLength = contentLength;
        this.value = value;
    }
}
export class FormDataBody {
    value;
    _tag = "FormDataBody";
    constructor(value) {
        this.value = value;
    }
}
export class StreamBody {
    contentType;
    contentLength;
    value;
    _tag = "StreamBody";
    constructor(contentType, contentLength, value) {
        this.contentType = contentType;
        this.contentLength = contentLength;
        this.value = value;
    }
}
const rawFromString = (contentType, value) => {
    const body = new TextEncoder().encode(value);
    return new RawBody(tsplus_module_1.some(contentType), tsplus_module_1.some(body.length), body);
};
export const text = (value, contentType = "text/plain") => rawFromString(contentType, value);
export const json = (value) => rawFromString("application/json", JSON.stringify(value));
export const searchParams = (value) => rawFromString("application/x-www-form-urlencoded", value.toString());
export const formData = (value) => new FormDataBody(value);
export const stream = (value, contentType = "application/octet-stream", contentLength) => new StreamBody(tsplus_module_1.some(contentType), tsplus_module_1.fromNullable(contentLength), value);
//# sourceMappingURL=Body.js.map