import { Maybe } from "@effect-http/client/_common";
import { Stream } from "@effect/stream/Stream";
export type RequestBody = RawBody | FormDataBody | StreamBody;
export declare class RawBody {
    readonly contentType: Maybe<string>;
    readonly contentLength: Maybe<number>;
    readonly value: unknown;
    readonly _tag = "RawBody";
    constructor(contentType: Maybe<string>, contentLength: Maybe<number>, value: unknown);
}
export declare class FormDataBody {
    readonly value: FormData;
    readonly _tag = "FormDataBody";
    constructor(value: FormData);
}
export declare class StreamBody {
    readonly contentType: Maybe<string>;
    readonly contentLength: Maybe<number>;
    readonly value: Stream<never, unknown, Uint8Array>;
    readonly _tag = "StreamBody";
    constructor(contentType: Maybe<string>, contentLength: Maybe<number>, value: Stream<never, unknown, Uint8Array>);
}
export declare const text: (value: string, contentType?: string) => RequestBody;
export declare const json: (value: unknown) => RequestBody;
export declare const searchParams: (value: URLSearchParams) => RequestBody;
export declare const formData: (value: FormData) => RequestBody;
export declare const stream: (value: Stream<never, unknown, Uint8Array>, contentType?: string, contentLength?: number) => RequestBody;
