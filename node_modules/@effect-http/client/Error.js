import * as tsplus_module_1 from "@effect/data/Function";
export const HttpClientErrorTypeId = Symbol.for("@effect-http/client/HttpClientError");
export class BaseHttpError {
    [HttpClientErrorTypeId] = tsplus_module_1.identity;
}
export class RequestError extends BaseHttpError {
    request;
    error;
    _tag = "RequestError";
    constructor(request, error) {
        super();
        this.request = request;
        this.error = error;
    }
}
export class StatusCodeError extends BaseHttpError {
    response;
    _tag = "StatusCodeError";
    status;
    constructor(response) {
        super();
        this.response = response;
        this.status = response.status;
    }
}
export class ResponseDecodeError extends BaseHttpError {
    error;
    source;
    kind;
    _tag = "ResponseDecodeError";
    constructor(error, source, kind) {
        super();
        this.error = error;
        this.source = source;
        this.kind = kind;
    }
}
export class SchemaEncodeError extends BaseHttpError {
    error;
    request;
    _tag = "SchemaEncodeError";
    constructor(error, request) {
        super();
        this.error = error;
        this.request = request;
    }
}
export class SchemaDecodeError extends BaseHttpError {
    error;
    response;
    _tag = "SchemaDecodeError";
    constructor(error, response) {
        super();
        this.error = error;
        this.response = response;
    }
}
//# sourceMappingURL=Error.js.map